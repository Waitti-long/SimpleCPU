// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/04/2020 23:28:13"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          cpu_w
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module cpu_w_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clock;
reg reset;
// wires                                               
wire [15:0] o_addr;
wire [15:0] o_bp;
wire [15:0] o_cmd;
wire [15:0] o_data_trans;
wire [15:0] o_ip;
wire [15:0] o_jp;
wire [15:0] o_memory;
wire [15:0] o_reg0;
wire [15:0] o_reg1;
wire [15:0] o_sp;
wire [15:0] o_ss_data;

// assign statements (if any)                          
cpu_w i1 (
// port map - connection between master ports and signals/registers   
	.clock(clock),
	.o_addr(o_addr),
	.o_bp(o_bp),
	.o_cmd(o_cmd),
	.o_data_trans(o_data_trans),
	.o_ip(o_ip),
	.o_jp(o_jp),
	.o_memory(o_memory),
	.o_reg0(o_reg0),
	.o_reg1(o_reg1),
	.o_sp(o_sp),
	.o_ss_data(o_ss_data),
	.reset(reset)
);
initial 
begin 
#1000000 $finish;
end 

// clock
always
begin
	clock = 1'b0;
	clock = #5000 1'b1;
	#5000;
end 

// reset
initial
begin
	reset = 1'b0;
	reset = #10000 1'b1;
end 
endmodule

